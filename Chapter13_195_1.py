'''
AI기초통계
13장 빅데이터 분석 과제
195페이지 히단
20. 5. 19.
차재관 작성
'''

import networkx as nx
import matplotlib.pyplot as plt

# 이전 코드를 사용할 때에는 너무 길어지므로 교안과 달리 간단하게 처리함
G = nx.Graph()
raw_node = [1, 'P', 'Hi', 3, 4]
G.add_nodes_from(raw_node)

#195페이지 설명
G.add_edge(1,2) # 각 노드를 연결한다
# 쉽게 표현하자면 노드는 점이고 엣지는 선이다.
# 네트워크 이론에서는 이렇게 표현하진 않지만 쉽게 이해하기 위해서 점과 선으로 설명
# 엣지는 링크라고도 표현함
# 네트워크 분석에서의 핵심은 해당 노드에 얼마나 많은 엣지가 연결되어 있는지 또한 어떠한 노드가 연결되어 있는지가 중요함

nx.draw(G, with_labels=True, node_color='lightblue', edge_color='grey')
# 데이터 값(G)를 제외한 나머지 인자들은 옵션값이다
# 굳이 입력하지 않아도 시각화를 할 수 있다
# 그리고 인자값 적용에 있어서 VSCODE 자동화 도구에서 등장하는 썸네일 창을 참고하면 좋다
# 물론 영어로 나와 있지만 쉬운 단어들로 구성되어 있어 쉽게 이해할 수 있다.
# 아니면 구글 검색창에서 검색하면 해당 도큐먼트들을 확인할 수 있다.
# 그리고 인자값은 프로그램에서 파라미터(Parameter, 이를 줄여서 Param이라고도 함)라고 한다.
# 파라미터 옵션값을 어떻게 적용하는지를 익혀두면 다양한 시각화를 구현할 수 있다.


print(G.edges())
# 교안에 순서상 프린트 문이 뒤에 나오지만 plt.show()앞에서 코딩함
# 이유는 맷플롭립이 그래프를 띄우고 나서 프로세스를 종료하기 때문에 가능하면 프린트문은 plt.show()앞에서 처리하는 것이 좋음  

'''
==결과값=
[(1, 2)]
'''

plt.show()
# 노드 1과 2가 연결된 형태로 구성됨

